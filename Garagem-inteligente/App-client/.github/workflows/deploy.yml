name: Build & Deploy

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  NODE_VERSION: '20'

jobs:
  # Job 1: Verificação de Qualidade
  quality-check:
    name: 🔍 Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔎 Type check
        run: pnpm run type-check

      - name: 🏗️ Build check
        run: pnpm run build

  # Job 2: Deploy Web (Firebase Hosting)
  deploy-web:
    name: 🌐 Deploy Web
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔢 Generate version info
        id: version
        run: |
          # Gera versão baseada em timestamp e short SHA
          VERSION="v$(date +%Y.%m.%d)-${GITHUB_SHA::7}"
          BUILD_NUMBER="${GITHUB_RUN_NUMBER}"
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_OUTPUT
          
          # Cria arquivo de versão
          cat > src/version.json << EOF
          {
            "version": "$VERSION",
            "buildNumber": "$BUILD_NUMBER",
            "buildDate": "$BUILD_DATE",
            "gitSha": "${GITHUB_SHA}",
            "gitRef": "${GITHUB_REF}",
            "platform": "web"
          }
          EOF
          
          echo "✅ Version: $VERSION (Build #$BUILD_NUMBER)"

      - name: 🏗️ Build application
        run: pnpm run build
        env:
          VITE_APP_VERSION: ${{ steps.version.outputs.VERSION }}
          VITE_BUILD_NUMBER: ${{ steps.version.outputs.BUILD_NUMBER }}
          VITE_BUILD_DATE: ${{ steps.version.outputs.BUILD_DATE }}

      - name: 🚀 Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: autocare-platform
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks

      - name: 📝 Create deployment summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build:** #${{ steps.version.outputs.BUILD_NUMBER }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Date:** ${{ steps.version.outputs.BUILD_DATE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform:** Web (Firebase Hosting)" >> $GITHUB_STEP_SUMMARY
          echo "- **URL:** https://app-garageminteligente.web.app" >> $GITHUB_STEP_SUMMARY

  # Job 3: Build Android APK
  build-android:
    name: 📱 Build Android
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: ☕ Setup Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔢 Generate version info
        id: version
        run: |
          VERSION="v$(date +%Y.%m.%d)-${GITHUB_SHA::7}"
          BUILD_NUMBER="${GITHUB_RUN_NUMBER}"
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_OUTPUT
          
          # Cria arquivo de versão
          cat > src/version.json << EOF
          {
            "version": "$VERSION",
            "buildNumber": "$BUILD_NUMBER",
            "buildDate": "$BUILD_DATE",
            "gitSha": "${GITHUB_SHA}",
            "gitRef": "${GITHUB_REF}",
            "platform": "android"
          }
          EOF
          
          echo "✅ Version: $VERSION (Build #$BUILD_NUMBER)"

      - name: 🏗️ Build web assets
        run: pnpm run build
        env:
          VITE_APP_VERSION: ${{ steps.version.outputs.VERSION }}
          VITE_BUILD_NUMBER: ${{ steps.version.outputs.BUILD_NUMBER }}
          VITE_BUILD_DATE: ${{ steps.version.outputs.BUILD_DATE }}

      - name: 📱 Sync Capacitor
        run: npx cap sync android

      - name: 🔨 Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon
          cd ..

      - name: 📦 Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ steps.version.outputs.VERSION }}
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: 📝 Create build summary
        run: |
          echo "## 📱 Android Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build:** #${{ steps.version.outputs.BUILD_NUMBER }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Date:** ${{ steps.version.outputs.BUILD_DATE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Platform:** Android" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifact:** android-apk-${{ steps.version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY

  # Job 4: Create Release (opcional)
  create-release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    needs: [deploy-web, build-android]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔢 Generate version
        id: version
        run: |
          VERSION="v$(date +%Y.%m.%d)-${GITHUB_SHA::7}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: 📥 Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk-${{ steps.version.outputs.VERSION }}
          path: ./artifacts

      - name: 🏷️ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## 🚀 Release ${{ steps.version.outputs.VERSION }}
            
            ### 📦 Downloads
            - Android APK (Debug)
            
            ### 🌐 Web
            - Live: https://app-garageminteligente.web.app
            - Custom Domain: https://app.garageminteligente.com.br (se configurado)
            
            ### 📝 Changes
            - Build #${{ github.run_number }}
            - Commit: ${{ github.sha }}
          files: ./artifacts/app-debug.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

