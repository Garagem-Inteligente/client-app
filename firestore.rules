rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Função auxiliar para verificar autenticação
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Função para verificar se o usuário é o dono do recurso
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Regras para a coleção de veículos
    match /vehicles/{vehicleId} {
      // Permitir leitura apenas dos próprios veículos
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Permitir criação apenas se o userId corresponde ao usuário autenticado
      allow create: if isAuthenticated() && 
                       request.resource.data.userId == request.auth.uid &&
                       request.resource.data.keys().hasAll(['make', 'model', 'year', 'plate', 'mileage', 'fuelType', 'userId', 'createdAt', 'updatedAt']);
      
      // Permitir atualização apenas do próprio veículo
      allow update: if isAuthenticated() && 
                       resource.data.userId == request.auth.uid &&
                       request.resource.data.userId == request.auth.uid;
      
      // Permitir exclusão apenas do próprio veículo
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Regras para a coleção de manutenções
    match /maintenance/{maintenanceId} {
      // Função para verificar se o veículo pertence ao usuário
      function vehicleBelongsToUser(vehicleId) {
        return isAuthenticated() && 
               exists(/databases/$(database)/documents/vehicles/$(vehicleId)) &&
               get(/databases/$(database)/documents/vehicles/$(vehicleId)).data.userId == request.auth.uid;
      }
      
      // Permitir leitura se o veículo pertence ao usuário
      allow read: if vehicleBelongsToUser(resource.data.vehicleId);
      
      // Permitir criação se o veículo pertence ao usuário
      allow create: if isAuthenticated() && 
                       vehicleBelongsToUser(request.resource.data.vehicleId) &&
                       request.resource.data.keys().hasAll(['vehicleId', 'type', 'description', 'cost', 'mileage', 'date', 'createdAt']);
      
      // Permitir atualização se o veículo pertence ao usuário
      allow update: if isAuthenticated() && 
                       vehicleBelongsToUser(resource.data.vehicleId) &&
                       request.resource.data.vehicleId == resource.data.vehicleId;
      
      // Permitir exclusão se o veículo pertence ao usuário
      allow delete: if vehicleBelongsToUser(resource.data.vehicleId);
    }
    
    // Bloquear acesso a todas as outras coleções
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
